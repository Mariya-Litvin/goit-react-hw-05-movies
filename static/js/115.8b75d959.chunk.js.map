{"version":3,"file":"static/js/115.8b75d959.chunk.js","mappings":"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","sources":["components/api/Api.jsx","components/pages/MovieDetails/MovieDetails.styled.js","components/pages/MovieDetails/MovieDetails.jsx"],"sourcesContent":["import axios from 'axios';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\nconst KEY = '3ad9f44e380b266d75ea33742d9ec7ef';\n\n// Список найпопулярніших фільмів на сьогодні для рендеру на головній сторінці\n\nexport const resultMovieDay = async () => {\n  const response = await axios.get(`/trending/movie/day?api_key=${KEY}`);\n  return response.data.results;\n};\n\n//  Запит повної інформації про фільм для сторінки кінофільму\n\nexport const resultOneMovie = async movieId => {\n  const response = await axios.get(\n    `/movie/${movieId}?api_key=${KEY}&language=en-US`\n  );\n  return response.data;\n};\n\n// Запит інформації про акторський склад для сторінки кінофільму\n\nexport const resultCast = async movieId => {\n  const response = await axios.get(\n    `/movie/${movieId}/credits?api_key=${KEY}&language=en-US`\n  );\n  return response.data.cast;\n};\n\n// Запит оглядів для сторінки кінофільму\n\nexport const resultReviews = async movieId => {\n  const response = await axios.get(\n    `/movie/${movieId}/reviews?api_key=${KEY}&language=en-US`\n  );\n  return response.data.results;\n};\n\n// Пошук фільму за ключовим словом на сторінці фільмів\n\nexport const resultQuery = async filter => {\n  const response = await axios.get(\n    `/search/movie?query=${filter}&api_key=${KEY}&language=en-US&include_adult=false`\n  );\n  return response.data.results;\n};\n","import { Link } from 'react-router-dom';\nimport styled from 'styled-components';\n\nexport const Section = styled.section`\n  width: 1280px;\n  margin: 0 auto;\n  padding-bottom: 20px;\n  display: flex;\n  flex-direction: column;\n`;\n\nexport const AboutMovie = styled.div`\n  display: flex;\n  flex-direction: row;\n  gap: 40px;\n  align-items: center;\n`;\n\nexport const TextAboutMovie = styled.div`\n  display: flex;\n  flex-direction: column;\n`;\nexport const Information = styled.div`\n  align-items: flex-start;\n  font-size: 20px;\n  > p {\n    font-weight: 700;\n  }\n`;\n\nexport const ButtonBack = styled(Link)`\n  display: flex;\n  align-items: center;\n  text-decoration: none;\n  width: 100px;\n  height: 30px;\n  padding: 5px;\n  margin-bottom: 10px;\n  font-weight: 500;\n  font-size: 18px;\n  border-radius: 5px;\n  border-color: #007bff;\n  background-color: #abcdef;\n  box-shadow: 0px 1px 1px rgba(0, 0, 0, 0.12), 0px 4px 4px rgba(0, 0, 0, 0.06),\n    1px 4px 6px rgba(0, 0, 0, 0.16);\n  transition: background-color 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  :hover,\n  :focus {\n    background-color: #6495ed;\n  }\n`;\n\nexport const Loading = styled.div`\n  width: 1280;\n  margin: 0 auto;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  font-size: 20px;\n  font-weight: 500;\n`;\n","import { resultOneMovie } from 'components/api/Api';\nimport { Suspense, useEffect, useState } from 'react';\nimport { Link, Outlet, useLocation, useParams } from 'react-router-dom';\nimport { HiArrowSmLeft } from 'react-icons/hi';\nimport Notiflix from 'notiflix';\nimport {\n  Section,\n  AboutMovie,\n  TextAboutMovie,\n  Information,\n  ButtonBack,\n  Loading,\n} from './MovieDetails.styled';\n\nconst MovieDetails = () => {\n  const [oneMovie, setOneMovie] = useState('');\n\n  const { movieId } = useParams();\n  // console.log(movieId);\n  const location = useLocation();\n\n  useEffect(() => {\n    async function getOneMovie() {\n      try {\n        const response = await resultOneMovie(movieId);\n        setOneMovie(response);\n      } catch (error) {\n        Notiflix.Notify.failure(\n          'Sorry, something went wrong, please try again later'\n        );\n      }\n    }\n    getOneMovie();\n  }, [movieId]);\n\n  const getMovieYear = () => {\n    if (oneMovie && oneMovie.release_date) {\n      return new Date(oneMovie.release_date).getFullYear();\n    }\n  };\n\n  const getUserScore = () => {\n    return Math.round(oneMovie.vote_average * 10);\n  };\n\n  const genresMovie = () => {\n    if (oneMovie && oneMovie.genres) {\n      const newgenres = oneMovie.genres.map(genre => genre.name);\n      return newgenres.join(' ');\n    }\n  };\n\n  if (!oneMovie) {\n    return (\n      <b\n        style={{\n          width: '1280',\n          margin: '0 auto',\n          display: 'flex',\n          alignItems: 'center',\n          justifyContent: 'center',\n        }}\n      >\n        Loading...\n      </b>\n    );\n  }\n\n  const backLinkHref = location.state?.from ?? '/';\n\n  return (\n    <main>\n      <Section>\n        <ButtonBack to={backLinkHref}>\n          <HiArrowSmLeft size=\"20\" />\n          Go back\n        </ButtonBack>\n        <AboutMovie>\n          {oneMovie && (\n            <img\n              src={\n                oneMovie.poster_path\n                  ? `https://image.tmdb.org/t/p/w300${oneMovie.poster_path}`\n                  : 'https://via.placeholder.com/300x450?text=No+foto'\n              }\n              alt={oneMovie.original_title}\n              width=\"300\"\n              loading=\"lazy\"\n            />\n          )}\n          <TextAboutMovie>\n            <h1>\n              {oneMovie.original_title} ({getMovieYear()})\n            </h1>\n            <p>User score: {getUserScore()}%</p>\n            <h2>Overview</h2>\n            <p>{oneMovie.overview}</p>\n            <h3>Genres</h3>\n            <p>{genresMovie()}</p>\n          </TextAboutMovie>\n        </AboutMovie>\n        <Information>\n          <p>Additional Information</p>\n          <ul>\n            <li>\n              <Link to=\"cast\" state={location.state}>\n                Cast\n              </Link>\n            </li>\n            <li>\n              <Link to=\"reviews\" state={location.state}>\n                Reviews\n              </Link>\n            </li>\n          </ul>\n          <Suspense fallback={<Loading>Loading subpage...</Loading>}>\n            <Outlet />\n          </Suspense>\n        </Information>\n      </Section>\n    </main>\n  );\n};\n\nexport default MovieDetails;\n"],"names":["axios","KEY","resultMovieDay","response","data","results","resultOneMovie","movieId","resultCast","cast","resultReviews","resultQuery","filter","Section","styled","AboutMovie","TextAboutMovie","Information","ButtonBack","Link","Loading","useState","oneMovie","setOneMovie","useParams","location","useLocation","useEffect","Notiflix","getOneMovie","style","width","margin","display","alignItems","justifyContent","backLinkHref","state","from","to","size","src","poster_path","alt","original_title","loading","release_date","Date","getFullYear","getMovieYear","Math","round","vote_average","overview","genres","map","genre","name","join","genresMovie","Suspense","fallback"],"sourceRoot":""}