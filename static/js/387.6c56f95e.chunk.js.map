{"version":3,"file":"static/js/387.6c56f95e.chunk.js","mappings":"8QAEaA,EAAUC,EAAAA,GAAAA,QAAH,mIAQPC,EAAQD,EAAAA,GAAAA,GAAH,iGAOLE,EAAeF,EAAAA,GAAAA,GAAH,uF,SC+BzB,EA3Ca,WACX,OAA4BG,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAcR,OAZAE,EAAAA,EAAAA,YAAU,WAAM,wCACd,8GAE2BC,EAAAA,EAAAA,IAAWH,GAFtC,OAEUI,EAFV,OAGIL,EAAUK,GAHd,gDAKIC,QAAQC,IAAR,MALJ,0DADc,uBAAC,WAAD,wBASdC,EACD,GAAE,CAACP,KAGF,UAACP,EAAD,WACqB,IAAlBK,EAAOU,SACN,kFAEF,SAACb,EAAD,UACGG,EAAOW,KAAI,SAAAC,GAAK,OACf,UAACd,EAAD,YACE,gBACEe,IACED,EAAME,aAAN,yCACsCF,EAAME,cACxC,mDAENC,IAAKH,EAAMI,KACXC,MAAM,MACNC,QAAQ,UAEV,uBAAIN,EAAMI,QACV,uCAAeJ,EAAMO,UAArB,SAZiBP,EAAMQ,GADV,QAmBxB,C,+LC7CDC,EAAAA,EAAAA,SAAAA,QAAyB,+BAEzB,IAAMC,EAAM,mCAICC,EAAc,mCAAG,oGACLF,EAAAA,EAAAA,IAAA,sCAAyCC,IADpC,cACtBhB,EADsB,yBAErBA,EAASkB,KAAKC,SAFO,2CAAH,qDAOdC,EAAc,mCAAG,WAAMxB,GAAN,uFACLmB,EAAAA,EAAAA,IAAA,iBACXnB,EADW,oBACQoB,EADR,oBADK,cACtBhB,EADsB,yBAIrBA,EAASkB,MAJY,2CAAH,sDASdnB,EAAU,mCAAG,WAAMH,GAAN,uFACDmB,EAAAA,EAAAA,IAAA,iBACXnB,EADW,4BACgBoB,EADhB,oBADC,cAClBhB,EADkB,yBAIjBA,EAASkB,KAAKG,MAJG,2CAAH,sDASVC,EAAa,mCAAG,WAAM1B,GAAN,uFACJmB,EAAAA,EAAAA,IAAA,iBACXnB,EADW,4BACgBoB,EADhB,oBADI,cACrBhB,EADqB,yBAIpBA,EAASkB,KAAKC,SAJM,2CAAH,sDASbI,EAAW,mCAAG,WAAMC,GAAN,uFACFT,EAAAA,EAAAA,IAAA,8BACES,EADF,oBACoBR,EADpB,wCADE,cACnBhB,EADmB,yBAIlBA,EAASkB,KAAKC,SAJI,2CAAH,qD","sources":["components/Cast/Cast.styled.js","components/Cast/Cast.jsx","components/api/Api.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Section = styled.section`\n  width: 1280px;\n  margin: 0 auto;\n  padding-bottom: 20px;\n  display: flex;\n  flex-direction: column;\n`;\n\nexport const Cards = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  gap: 20px;\n  list-style: none;\n`;\n\nexport const ElementCards = styled.li`\n  text-align: center;\n  flex-basis: calc((100% - 60px) / 4);\n`;\n","import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { resultCast } from '../api/Api';\nimport { Cards, ElementCards, Section } from './Cast.styled';\n\nconst Cast = () => {\n  const [actors, setActors] = useState([]);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    async function getActors() {\n      try {\n        const response = await resultCast(movieId);\n        setActors(response);\n      } catch (error) {\n        console.log(error);\n      }\n    }\n    getActors();\n  }, [movieId]);\n\n  return (\n    <Section>\n      {actors.length === 0 && (\n        <h3>We don't have any casting information for this film.</h3>\n      )}\n      <Cards>\n        {actors.map(actor => (\n          <ElementCards key={actor.id}>\n            <img\n              src={\n                actor.profile_path\n                  ? `https://image.tmdb.org/t/p/w200${actor.profile_path}`\n                  : 'https://via.placeholder.com/200x300?text=No+foto'\n              }\n              alt={actor.name}\n              width=\"200\"\n              loading=\"lazy\"\n            />\n            <p>{actor.name}</p>\n            <p>Character: {actor.character} </p>\n          </ElementCards>\n        ))}\n      </Cards>\n    </Section>\n  );\n};\n\nexport default Cast;\n","import axios from 'axios';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\nconst KEY = '3ad9f44e380b266d75ea33742d9ec7ef';\n\n// Список найпопулярніших фільмів на сьогодні для рендеру на головній сторінці\n\nexport const resultMovieDay = async () => {\n  const response = await axios.get(`/trending/movie/day?api_key=${KEY}`);\n  return response.data.results;\n};\n\n//  Запит повної інформації про фільм для сторінки кінофільму\n\nexport const resultOneMovie = async movieId => {\n  const response = await axios.get(\n    `/movie/${movieId}?api_key=${KEY}&language=en-US`\n  );\n  return response.data;\n};\n\n// Запит інформації про акторський склад для сторінки кінофільму\n\nexport const resultCast = async movieId => {\n  const response = await axios.get(\n    `/movie/${movieId}/credits?api_key=${KEY}&language=en-US`\n  );\n  return response.data.cast;\n};\n\n// Запит оглядів для сторінки кінофільму\n\nexport const resultReviews = async movieId => {\n  const response = await axios.get(\n    `/movie/${movieId}/reviews?api_key=${KEY}&language=en-US`\n  );\n  return response.data.results;\n};\n\n// Пошук фільму за ключовим словом на сторінці фільмів\n\nexport const resultQuery = async filter => {\n  const response = await axios.get(\n    `/search/movie?query=${filter}&api_key=${KEY}&language=en-US&include_adult=false`\n  );\n  return response.data.results;\n};\n"],"names":["Section","styled","Cards","ElementCards","useState","actors","setActors","movieId","useParams","useEffect","resultCast","response","console","log","getActors","length","map","actor","src","profile_path","alt","name","width","loading","character","id","axios","KEY","resultMovieDay","data","results","resultOneMovie","cast","resultReviews","resultQuery","filter"],"sourceRoot":""}